## valid uuid = 6cdd799c-c886-47b7-8010-3adb97d73b83

 
### 
# @name createCategory
POST http://localhost:3000/categories
Content-Type: application/json

{
  "name": "Category 1",
  "description": "Description 1"
}

###

@categoryId = {{createCategory.response.body.data.id}}

###
GET http://localhost:3000/categories

###
GET http://localhost:3000/categories/8f4b7b9c-3f7a-4b6c-8b0c-1c9c5b8b9b6a


### 
# @name createGenre
POST http://localhost:3000/genres
Content-Type: application/json

{
    "name": "Genre 1",
    "categories_id": [
      "{{categoryId}}"
    ]
}

###

@genreId = {{createGenre.response.body.data.id}}

###
# @name createCastMember
POST http://localhost:3000/cast-members
Content-Type: application/json

{
  "name": "Cast Member 1",
  "type": 1
}

###

@castMemberId = {{createCastMember.response.body.data.id}}

###


### Verificar Criações
GET http://localhost:3000/categories/{{categoryId}}
###
GET http://localhost:3000/genres/{{genreId}}
###
GET http://localhost:3000/cast-members/{{castMemberId}}


###

# @name createVideo
POST http://localhost:3000/videos
Content-Type: application/json

{
  "title": "Vídeo Teste",
  "description": "Descrição do vídeo teste",
  "year_launched": 2024,
  "is_opened": false,
  "rating": "L",
  "duration": 90,
  "categories_id": ["{{categoryId}}"],
  "genres_id": ["{{genreId}}"],
  "cast_members_id": ["{{castMemberId}}"]
}

###

@videoId = {{createVideo.response.body.data.id}}

###

# @name updateVideo
PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: application/json

{
  "title": "Video Teste Atualizado",
  "description": "Descrição do video teste atualizado",
  "year_launched": 2024,
  "is_opened": false,
  "rating": "L",
  "duration": 90,
  "categories_id": ["{{categoryId}}"],
  "genres_id": ["{{genreId}}"],
  "cast_members_id": ["{{castMemberId}}"]
}

###
# @name updateVideo

PATCH http://localhost:3000/videos/{{videoId}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary1234

------WebKitFormBoundary1234
Content-Disposition: form-data; name="video"; filename="video.mp4"
Content-Type: video/mp4

< ./package.json
# ------WebKitFormBoundary1234
# Content-Disposition: form-data; name="video"; filename="video.mp4"
# Content-Type: video/mp4

# < ./package.json
------WebKitFormBoundary1234--
 

###
GET http://localhost:3000/fake-event
###
GET http://localhost:3000/rabbitmq-fake


###

# @name Keycloak
POST http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/token
Content-Type: application/x-www-form-urlencoded

username=admin@user.com
&password=secret
&grant_type=password
&client_id=codeflix-admin-frontend

# Up keycloack container manually
# docker compose -f docker-compose-keycloak.yaml up

##
### configuração do openid connect server
GET http://host.docker.internal:8080/realms/codeflix/.well-known/openid-configuration

### Certificados
GET http://host.docker.internal:8080/realms/codeflix/protocol/openid-connect/certs 


###
# @name login
POST http://localhost:3000/auth/login
Content-Type: application/json

{
  "email": "admin@user.com",
  "password": "secret"
}

###
GET http://localhost:3000/auth/protected
Content-Type: application/json
Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsiYWRtaW4tY2F0YWxvZyJdfSwiaWF0IjoxNzQ3MzYxOTUwLCJleHAiOjE3NDc0NDgzNTB9.fK0a2o8xsn1sUIiFK_mkG3nn7_RCPHOYSkU_vf4fw2Bhe5fifdCja3xGy7AtyAFvBnn0uF1W8Z_cSilS1bBaHNfyxlV_jQf69fUg24MJdX8rMFN9cPYt6CAqXdBHjagFN--Ng79YAMoSJlfUveIgFD7KtmVnReHRbM-Q6o5tSwivG1zGMhVn_-zYQVxhrxiDhpP6xRsl3-Qd062fixY0d3q1Ecz1APgqrgvsGdSdWNlNpI7JvVi7wdFcT9ARPlb3Cw29jmOE2rxkPrwYxK_wHyuSEbE0tPSIrl45uxku77gzK-Y58dQaAUdHmv4RgWdSq0AwNFOEWWp98gSdb6Xjyw

